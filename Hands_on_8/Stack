#include <iostream>
#define MAX_SIZE 100

class Stack {
private:
    int arr[MAX_SIZE];
    int top;

public:
    Stack() {
        top = -1; // Initialize top to -1 to indicate an empty stack
    }

    // Push an element to the top of the stack
    void push(int value) {
        if (top >= MAX_SIZE - 1) {
            std::cout << "Stack overflow!" << std::endl;
            return;
        }
        arr[++top] = value;
    }

    // Pop the top element from the stack
    int pop() {
        if (top < 0) {
            std::cout << "Stack underflow!" << std::endl;
            return -1;
        }
        return arr[top--];
    }

    // Get the top element without removing it
    int peek() {
        if (top < 0) {
            std::cout << "Stack is empty!" << std::endl;
            return -1;
        }
        return arr[top];
    }

    // Check if the stack is empty
    bool isEmpty() {
        return top == -1;
    }

    // Display the stack contents
    void display() {
        if (top < 0) {
            std::cout << "Stack is empty!" << std::endl;
            return;
        }
        std::cout << "Stack elements: ";
        for (int i = 0; i <= top; i++) {
            std::cout << arr[i] << " ";
        }
        std::cout << std::endl;
    }
};

int main() {
    Stack stack;
    stack.push(10);
    stack.push(20);
    stack.push(30);

    stack.display();

    std::cout << "Popped element: " << stack.pop() << std::endl;
    stack.display();

    std::cout << "Top element: " << stack.peek() << std::endl;

    return 0;
}

//output
//Stack elements: 10 20 30 
//Popped element: 30
//Stack elements: 10 20 
//Top element: 20
